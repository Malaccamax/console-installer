#!/bin/bash
__appname__="installer"
__version__="v1.0.0"
__branch__="master"
__author__="@leaeasy"
__license__="Apache v2.0 License"

export LC_ALL=C.UTF-8

_installer_banner() {
    echo -e """${red}
	______      _        
	|  _  \    | |       
	| | | |___ | |_ __ _ 
	| | | / _ \| __/ _\` |
	| |/ / (_) | || (_| |
	|___/ \___/ \__\__,_| ${green}${__version__}
${blue}
 Welcome in container installer.
${nc}
"""
}

#
# SYSTEM MANAGEMENT
# _________________
# TODO: support from http
PRESEEDCFG="./preseed.sh"

# Shell color
red="\e[1;31m"; green="\e[1;32m"; yellow="\e[1;33m"
blue="\e[1;34m"; cyan="\e[1;36m"; nc="\e[0m"

# Display install steps
_info() {
    echo -e "${yellow}\n==> ${cyan}${1}...${nc}"
}

# Display some notes
_note() {
    echo -e "${red}\nNote: ${blue}${1}${nc}"
}

# DL show progress bar only
_wget() {
    wget ${1} -q --show-progress
}

# Execute action in chrooted environment
_chroot() {
    arch-chroot /mnt /bin/bash <<EOF
    ${1}
EOF
}

# Set logfile
_logs() {
    _info "Setting installer log"
    datetime=$(date '+%d-%m-%Y')
    log="installer_${datetime}.log"
}

# Set system clock
_clock() {
    _info "Setting system clock"
    timedatectl set-ntp true
    timedatectl set-timezone ${timezone}
}

# Check command status
_check() {
    "$@"
    local status=$?
    if [[ ${status} -ne 0 ]]; then
        _fatal "with ${1}"
    fi
    return ${status}
}

# Reboot with 10s timeout
_reboot() {
    for d in $(seq 10 -1 1); do
        echo -ne "\r\033[K${green}System will reboot in ${d}s...${nc}"
        sleep 1
    done
    reboot
}

# Display error
_error() {
    echo -e "${red}Error: ${yellow}${1}${nc}\n"
}

_fatal(){
	echo -e "${red}Fatal: ${yellow}${1} Please try again.${nc}\n"
	_reboot
}

# Display end of prompt or confirm
_end() {
    for char in $(seq ${count}); do
        echo -ne "-"
    done
    echo -ne "\n==> ${nc}"
}

# Ask confirmation (Yes/No)
_confirm() {
    count=$((${#1} + 6))
    until [[ ${confirm} =~ ^(y|n|Y|N)$ ]]; do
        echo -ne "${yellow}\n==> ${green}${1} ${red}[y/n]${yellow}\n==> "
        _end
        read -r confirm
    done
}

# Select an option
_select() {
    count=0
    echo -ne "${yellow}\n==> "
    for entry in ${@}; do
        echo -ne "${red}[$((++count))] ${green}${entry} ${nc}"
    done
    lenth=${@}
    number=$((${#*} * 4))
    count=$((${#lenth} + ${number} + 1))
    echo -ne "${yellow}\n==> "
    _end
}

# Ask some infos
_prompt() {
    lenth=${@}
    count=${#lenth}
    echo -ne "\n${yellow}==> ${green}${1} ${red}${2}"
    echo -ne "${yellow}\n==> "
    _end
}

#
# START ARCHBOOT
# ______________

_installer_banner

# Loading preseed configure
_info "Loading preseed configure"
if [ -e ${PRESEEDCFG} ];then
	. ${PRESEEDCFG}
    _note "OK, preseed configure file is loaded."
else
    _error "no preseed file is found!"
fi

# Download base sources
_confirm "Start installer?"
case ${confirm} in
    y|Y)
        ;;
    *)
        exit
        ;;
esac
unset confirm

# Import base sources
_info "Importing base libraries"
source ./libs/base
source ./libs/configure
source ./libs/bootloader
source ./libs/firmware
source ./libs/mounting
source ./libs/partition
source ./libs/user

# Ask for user informations
_ask_user_informations

# Prepare the system
_clock; _logs; _firmware; _partition; _mounting
_note "system ready! Partitions mounted & swap activated."

# Install system
_confirm "Do you wish to install now?"
case ${confirm} in
    y|Y)
        (_base; _configure) 2>&1 | tee -a ${log}
        _bootloader 2>&1 | tee -a ${log}

        # Logfile path
        _info "Setting logfile path"
        mkdir /mnt/var/log/installer
        cp "${log}" /mnt/var/log/installer/

        # Success notes
        _note "installation successful!"
        ;;

    *)
        # Install aborted
        _error "aborted by user!"
        ;;
esac
unset confirm

#
# SYSTEM REBOOT
# _____________

_confirm "Do you want to reboot your computer now?"
case ${confirm} in
    y|Y)
        umount -R /mnt
        _reboot
        ;;
    *)
        exit
        ;;
esac
